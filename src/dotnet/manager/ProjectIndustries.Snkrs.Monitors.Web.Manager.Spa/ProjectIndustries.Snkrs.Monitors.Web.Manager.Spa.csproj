<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>netcoreapp3.1</TargetFramework>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

        <!-- Set this to true if you enable server-side prerendering -->
        <BuildServerSideRenderer>false</BuildServerSideRenderer>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.2" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <None Include="ClientApp\src\app\cms\officials\models\forms\import-full-upload-files.form-group.ts" />
        <None Include="ClientApp\src\app\cms\officials\service\FullImportFilesService.ts" />
        <None Include="ClientApp\src\app\core\services\official-categories.provider.ts" />
        <None Include="ClientApp\src\app\shared\components\tree-context-menu.component-base - Copy.ts" />
        <None Include="ClientApp\src\app\shared\components\user-editor\tree-editor.component-base.ts" />
        <None Include="ClientApp\src\app\shared\model\forms\identity-base.form-group.ts" />
        <None Include="ClientApp\src\app\shared\model\forms\localization.form-group.ts" />
        <None Include="ClientApp\src\app\shared\tree-editor.component-base.ts" />
        <TypeScriptCompile Include="ClientApp\src\app\admin\admin-routes.module.ts" />
        <TypeScriptCompile Include="ClientApp\src\app\admin\admin.module.ts" />
        <TypeScriptCompile Include="ClientApp\src\app\admin\models\observable-server-instance.model.ts" />
        <TypeScriptCompile Include="ClientApp\src\app\admin\services\images.provider.ts" />
        <TypeScriptCompile Include="ClientApp\src\app\admin\services\modal.util.ts" />
        <TypeScriptCompile Include="ClientApp\src\app\admin\services\server-nodes.provider.ts" />
        <TypeScriptCompile Include="ClientApp\src\app\core\services\date.util.ts" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
        <TypeScriptCompile Include="ClientApp\src\app\shared\model\base64-file.data.ts" />
        <TypeScriptCompile Include="ClientApp\src\app\shared\pipes\date-from-now.pipe.ts" />
    </ItemGroup>

    <ItemGroup>
      <Folder Include="ClientApp\src\app\account\models" />
      <Folder Include="ClientApp\src\app\shared\model\forms" />
    </ItemGroup>

    <ItemGroup>
      <_ContentIncludedByDefault Remove="ClientApp\src\app\snkrs-monitors-management-api\ng-package.json" />
      <_ContentIncludedByDefault Remove="ClientApp\src\app\snkrs-monitors-management-api\package.json" />
      <_ContentIncludedByDefault Remove="ClientApp\src\app\snkrs-monitors-management-api\tsconfig.json" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

<!--    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">-->
<!--        &lt;!&ndash; As part of publishing, ensure the JS resources are freshly built in production mode &ndash;&gt;-->
<!--        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />-->
<!--        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build &#45;&#45; &#45;&#45;prod" />-->
<!--        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr &#45;&#45; &#45;&#45;prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />-->

<!--        &lt;!&ndash; Include the newly-built files in the publish output &ndash;&gt;-->
<!--        <ItemGroup>-->
<!--            <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />-->
<!--            <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />-->
<!--            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">-->
<!--                <RelativePath>%(DistFiles.Identity)</RelativePath>-->
<!--                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>-->
<!--                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>-->
<!--            </ResolvedFileToPublish>-->
<!--        </ItemGroup>-->
<!--    </Target>-->

</Project>
